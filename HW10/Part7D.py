import matplotlib.pyplot as plt
import numpy as np
import csv

avg_data = []

t = [] # column 0
data1 = [] # column 1
data2 = [] # column 2

#Manually change which CSV youre looking at every time
with open("sigD.csv") as f:
    # open the csv file
    reader = csv.reader(f)
    for row in reader:
        # read the rows 1 one by one
        t.append(float(row[0])) # leftmost column
        data1.append(float(row[1])) # second column
        # data2.append(float(row[2])) # third column

weights = [
    -0.000096596047122395,
    -0.000162668238689683,
    -0.000041599266513408,
    0.000130496688616942,
    0.000155520231456214,
    -0.000000000000000002,
    -0.000161255143850796,
    -0.000140276250961151,
    0.000046343879153311,
    0.000187728970645943,
    0.000115411584677663,
    -0.000097346856804183,
    -0.000207864805831009,
    -0.000079140359724670,
    0.000152103942759157,
    0.000218672612740403,
    0.000029851838151692,
    -0.000208520625501862,
    -0.000216396756975740,
    0.000033360377653712,
    0.000263073254626422,
    0.000196888176606479,
    -0.000110143697827453,
    -0.000310758700152793,
    -0.000156155678419461,
    0.000198384933050113,
    0.000345274224227817,
    0.000091048540059909,
    -0.000293842886161494,
    -0.000359444185852937,
    0.000000000000000001,
    0.000389989814726431,
    0.000345881684931363,
    -0.000116255432204480,
    -0.000478120768654851,
    -0.000297843304371744,
    0.000254086375082363,
    0.000547765959003686,
    0.000210206810038796,
    -0.000406584951368664,
    -0.000587411156043502,
    -0.000080478125141439,
    0.000563485775079539,
    0.000585497279327520,
    -0.000090282064500782,
    -0.000711444532059910,
    -0.000531636002399873,
    0.000296727839108501,
    0.000834706839851628,
    0.000417946782378571,
    -0.000528804320143456,
    -0.000916161445420752,
    -0.000240395614996471,
    0.000771724449158585,
    0.000938731947129977,
    -0.000000000000000005,
    -0.001006412139618935,
    -0.000887021716212929,
    0.000296239617919669,
    0.001210440520916791,
    0.000749091357279989,
    -0.000634812933723288,
    -0.001359450345239019,
    -0.000518220564441742,
    0.000995686472409598,
    0.001428987036966320,
    0.000194489790845111,
    -0.001352878832520702,
    -0.001396649395255837,
    0.000213985860654415,
    0.001675655246403564,
    0.001244402842689673,
    -0.000690326383927673,
    -0.001930321203866524,
    -0.000960879366637193,
    0.001208789565125771,
    0.002082541078066479,
    0.000543468364438398,
    -0.001735395835022640,
    -0.002100055646972125,
    0.000000000000000016,
    0.002229313361047245,
    0.001955626811858770,
    -0.000650163258645366,
    -0.002644982985811244,
    -0.001630003106696098,
    0.001375780555188728,
    0.002934901336612129,
    0.001114679549522919,
    -0.002134239779546936,
    -0.003052921424699835,
    -0.000414222795531712,
    0.002872967477986550,
    0.002957878553354726,
    -0.000452051058624472,
    -0.003531724577341063,
    -0.002617310328612262,
    0.001449223176054067,
    0.004045701069464638,
    0.002011017344350681,
    -0.002526867039492199,
    -0.004349255003846408,
    -0.001134209081497430,
    0.003620147164350905,
    0.004380080996675746,
    -0.000000000000000011,
    -0.004651896410627228,
    -0.004083546186061140,
    0.001358935065082120,
    0.005535558478297484,
    0.003416901542045470,
    -0.002889668718947557,
    -0.006178788943311592,
    -0.002353066875808222,
    0.004519321133395436,
    0.006487411074686396,
    0.000883700482951674,
    -0.006156260125280896,
    -0.006369317785571475,
    0.000978700891490833,
    0.007691950147344346,
    0.005737784466317035,
    -0.003199870902205453,
    -0.009002979355948938,
    -0.004513474005112667,
    0.005724138201010116,
    0.009952454910974937,
    0.002624092805221662,
    -0.008476129324370795,
    -0.010389358104255215,
    0.000000000000000013,
    0.011363761755713492,
    0.010143241634511975,
    -0.003437408354177229,
    -0.014282388699949985,
    -0.009008890993171653,
    0.007801361623592508,
    0.017119873791047756,
    0.006708485694939438,
    -0.013296146502705193,
    -0.019762304009920181,
    -0.002798061575680620,
    0.020351671022294841,
    0.022099997979774244,
    -0.003586599982628627,
    -0.029997144526038699,
    -0.024033438666683289,
    0.014563266105551222,
    0.045187107547394675,
    0.025478756816720897,
    -0.037342627011023505,
    -0.078073600638919466,
    -0.026372414800243663,
    0.122621986058003854,
    0.288075896589259028,
    0.360109645484150254,
    0.288075896589259028,
    0.122621986058003854,
    -0.026372414800243663,
    -0.078073600638919466,
    -0.037342627011023505,
    0.025478756816720897,
    0.045187107547394675,
    0.014563266105551222,
    -0.024033438666683293,
    -0.029997144526038699,
    -0.003586599982628627,
    0.022099997979774244,
    0.020351671022294841,
    -0.002798061575680620,
    -0.019762304009920184,
    -0.013296146502705193,
    0.006708485694939438,
    0.017119873791047759,
    0.007801361623592508,
    -0.009008890993171655,
    -0.014282388699949989,
    -0.003437408354177229,
    0.010143241634511975,
    0.011363761755713490,
    0.000000000000000013,
    -0.010389358104255215,
    -0.008476129324370795,
    0.002624092805221662,
    0.009952454910974939,
    0.005724138201010117,
    -0.004513474005112669,
    -0.009002979355948938,
    -0.003199870902205453,
    0.005737784466317035,
    0.007691950147344346,
    0.000978700891490833,
    -0.006369317785571475,
    -0.006156260125280898,
    0.000883700482951674,
    0.006487411074686396,
    0.004519321133395438,
    -0.002353066875808222,
    -0.006178788943311592,
    -0.002889668718947557,
    0.003416901542045469,
    0.005535558478297484,
    0.001358935065082120,
    -0.004083546186061141,
    -0.004651896410627228,
    -0.000000000000000011,
    0.004380080996675746,
    0.003620147164350906,
    -0.001134209081497430,
    -0.004349255003846407,
    -0.002526867039492198,
    0.002011017344350681,
    0.004045701069464638,
    0.001449223176054068,
    -0.002617310328612262,
    -0.003531724577341064,
    -0.000452051058624472,
    0.002957878553354726,
    0.002872967477986551,
    -0.000414222795531712,
    -0.003052921424699835,
    -0.002134239779546935,
    0.001114679549522919,
    0.002934901336612129,
    0.001375780555188728,
    -0.001630003106696099,
    -0.002644982985811245,
    -0.000650163258645366,
    0.001955626811858770,
    0.002229313361047246,
    0.000000000000000016,
    -0.002100055646972125,
    -0.001735395835022640,
    0.000543468364438398,
    0.002082541078066480,
    0.001208789565125772,
    -0.000960879366637193,
    -0.001930321203866525,
    -0.000690326383927673,
    0.001244402842689673,
    0.001675655246403565,
    0.000213985860654415,
    -0.001396649395255837,
    -0.001352878832520701,
    0.000194489790845111,
    0.001428987036966321,
    0.000995686472409598,
    -0.000518220564441742,
    -0.001359450345239019,
    -0.000634812933723288,
    0.000749091357279991,
    0.001210440520916791,
    0.000296239617919668,
    -0.000887021716212929,
    -0.001006412139618934,
    -0.000000000000000005,
    0.000938731947129978,
    0.000771724449158585,
    -0.000240395614996471,
    -0.000916161445420752,
    -0.000528804320143456,
    0.000417946782378571,
    0.000834706839851628,
    0.000296727839108501,
    -0.000531636002399872,
    -0.000711444532059910,
    -0.000090282064500782,
    0.000585497279327521,
    0.000563485775079539,
    -0.000080478125141439,
    -0.000587411156043502,
    -0.000406584951368665,
    0.000210206810038796,
    0.000547765959003685,
    0.000254086375082363,
    -0.000297843304371743,
    -0.000478120768654851,
    -0.000116255432204480,
    0.000345881684931363,
    0.000389989814726431,
    0.000000000000000001,
    -0.000359444185852937,
    -0.000293842886161495,
    0.000091048540059909,
    0.000345274224227817,
    0.000198384933050113,
    -0.000156155678419461,
    -0.000310758700152793,
    -0.000110143697827453,
    0.000196888176606479,
    0.000263073254626422,
    0.000033360377653712,
    -0.000216396756975740,
    -0.000208520625501862,
    0.000029851838151692,
    0.000218672612740403,
    0.000152103942759157,
    -0.000079140359724671,
    -0.000207864805831010,
    -0.000097346856804183,
    0.000115411584677663,
    0.000187728970645943,
    0.000046343879153311,
    -0.000140276250961151,
    -0.000161255143850796,
    -0.000000000000000002,
    0.000155520231456214,
    0.000130496688616942,
    -0.000041599266513408,
    -0.000162668238689683,
    -0.000096596047122395,
]

#FIR Filtering
for i in range(len(data1)):
    total=0
    for j in range(len(weights)): #Loop over the weights and apply every weight to average
        k = i-j
        if k >= 0:
            total = total + (weights[j]*data1[k])
    avg_data.append(total)

def fft_plotting(t, data1, avg_data):
    
    t =np.array(t)
    y =np.array(data1)
    y2 = np.array(avg_data)

    Fs = (len(t))/(t[-1]) # sample rate
    n = len(y) # length of the signal
    k = np.arange(n)
    T = n/Fs
    frq = k/T # two sides frequency range
    frq = frq[range(int(n/2))] # one side frequency range
    Y = np.fft.fft(y)/n # fft computing and normalization
    Y = Y[range(int(n/2))]

    FY = np.fft.fft(y2)/n # fft computing and normalization
    FY = FY[range(int(n/2))]

    fig, (ax1, ax2, ax3, ax4) = plt.subplots(4,1,figsize=(10,10))
    fig.suptitle(f'Unfiltered vs. FIR Sample Rate=400 Cutoff=72Hz Bandwidth=4')

    ax1.plot(t,y,color='black',label='Original Data')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Amplitude')
    ax1.legend()

    ax2.plot(t,avg_data,color='red',label='Filtered Data')
    ax2.set_xlabel('Time')
    ax2.set_ylabel('Amplitude')
    ax2.legend()

    ax3.loglog(frq,abs(Y),color='black',label='Original Data') # plotting the fft
    ax3.set_xlabel('Freq (Hz)')
    ax3.set_ylabel('|Y(freq)|')

    ax4.loglog(frq,abs(FY),color='red',label='Filtered Data') # plotting the fft
    ax4.set_xlabel('Freq (Hz)')
    ax4.set_ylabel('|Y(freq)|')
    plt.tight_layout()
    plt.show()

fft_plotting(t, data1, avg_data)
